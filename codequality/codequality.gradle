apply plugin: "java" // https://stackoverflow.com/a/43875557
apply plugin: "checkstyle"
apply plugin: "pmd"
apply plugin: "jacoco"

checkstyle {
    toolVersion '10.7.0'
    configFile = file("${project.rootDir}/codequality/checkstyle.xml")
}

pmd {
    toolVersion = "6.54.0"
    consoleOutput = true
    incrementalAnalysis = true
    ruleSets = ["category/java/errorprone.xml", "category/java/bestpractices.xml"]
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        html.destination file("$buildDir/reports/jacoco")
    }

    // classDirectories and not sourceDirectories should be used, coz JaCoCo works with .class files
    // https://stackoverflow.com/a/59474116
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [
                              // does not worth testing
                              '**/entity/**',
                              '**/dto/**',
                              '**/MongodbPgApplication**',
                              // auto-generated by MapStruct
                              '**/mapper/*MapperImpl*',
                    ])
        }))
    }
}


jacocoTestCoverageVerification {
    violationRules {
        failOnViolation = true
        afterEvaluate {
            classDirectories.setFrom(tasks.jacocoTestReport.classDirectories)
        }
        rule {
            limit {
                counter = 'INSTRUCTION'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
        }

        rule {
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
test {
    dependsOn checkstyleMain
    dependsOn checkstyleTest
    dependsOn pmdMain
    dependsOn pmdTest

    finalizedBy jacocoTestReport // report is always generated after tests run
}